인스턴스를 만들지 않아도 (new ~~)
static은 classvariable하다라고도 한다.
static키워드를 가장 먼저실행

Shape a = new Shape();
a.A = 200;
b.B = 1000;
위코드로 쓰면 이클립스에서 노란줄
Shape.B = 1000; (클래스이름.변수 )
로 사용

public static void dosomethine2() { a = 300, b=30, c=3};
public void dosomethine() { a = 500, b=50, c=5};

메소드에서는 로컬변수는사용할수 있지만
인스턴스변수는 사용할수없다.
------------------------------------------------------------------------------------------------
int num = Integer.parseInt("100");
-------------------------------------------------------------------------------------------
static {
	counter = Integer.getInteger
}
클래스가 로드될떄 1번만 실행.

변수의 final = 상수
메소드의 final = 오버라이딩 x
클래스의 final = 상속불가

private static final : 접근제어 + 로드될때 1번만 실행 + 변수변경불가
--------------------------------------------------------------------------------------------------
Enum!!
public enum Suit{
	SPADES,
	HEARTS,
	CLUBS,
	DIAMONDS
}

클래스는 여러가지 인스턴스를 만들수 있지만
이넘은 위 코드 4개 이후 더이상 추가할수 없다. = 상수를 객체화한다.
하지만 private static final로 해도 아무상관없다!!
---------------------------------------------------------------------------------------------------
abstract
객체x / 바디가없다!
추상메서드가1개라도있으면 추상클래스로 작성한다.
부모가 추상클래스면 그 속성도 전이된다.
자식이 추상클래스의 속성으로 만들지않으려면 오버라이딩한다.
또는 인터페이스를 만든다.

인터페이스는
추상메서드의 집합 / 추상메서드만 들어올수있다.
변수는 없다 / 상수는 가질수 있다.
다중상속지원
인터페이스에서는 기본이 public, abstract이기때문에 명시적으로 안써도 가능

다른 클래스파일에서 abstract로 사용하지 않기 위해서는 implements이후 오버라이드를 해야한다.

